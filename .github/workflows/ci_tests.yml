name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  basic-tests:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v2.7.1
    with:
      # General setup
      install_extras: "[dev]"

      # pre-commit
      python_version_pre-commit: "3.10"

      # pylint & safety
      python_version_pylint_safety: "3.10"
      run_pylint: false

      # Build dist
      python_version_package: "3.10"
      build_libs: flit
      build_cmd: flit build

      # Build documentation
      run_build_docs: false

  docker:
    name: Docker
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docker_target: ["development", "production"]

    services:
      mongo:
        image: mongo:7
        ports:
          - "27017:27017"
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root

    env:
      ENTITIES_SERVICE_MONGO_URI: mongodb://localhost:27017
      ENTITIES_SERVICE_MONGO_USER: root
      ENTITIES_SERVICE_MONGO_PASSWORD: root
      ENTITIES_SERVICE_HOST: localhost
      ENTITIES_SERVICE_PORT: 8000

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build Docker image
        run: |
          docker build \
            --pull \
            --tag entities-service \
            --target ${{ matrix.docker_target }} \
            .

      - name: Run Docker container
        run: |
          docker run --rm -d \
            --env ENTITIES_SERVICE_MONGO_URI \
            --env ENTITIES_SERVICE_MONGO_USER \
            --env ENTITIES_SERVICE_MONGO_PASSWORD \
            --env PORT=${ENTITIES_SERVICE_PORT} \
            --name "entities-service" \
            --network "host" \
            --volume "${PWD}:/app" \
            --user "$(id -u):$(id -g)" \
            entities-service
          sleep 5

      - name: Install test dependencies
        run: |
          python -m pip install -U pip
          pip install -U setuptools wheel flit
          pip install -U -e .[testing]

      - name: Run tests
        run: |
          {
            pytest -vv --live-backend --cov-report=xml
          } || {
            echo "Failed! Here's the Docker logs for the service:" &&
            docker logs entities-service &&

            echo -e "\nAnd the service log:" &&
            cat logs/entities_service.log &&

            exit 1
          }

      - name: Upload coverage
        if: github.repository_owner == 'SINTEF'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          env_vars: OS,PYTHON
          flags: docker
        env:
          OS: ubuntu-latest
          PYTHON: '3.10'

  pytest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install test dependencies
        run: |
          python -m pip install -U pip
          pip install -U setuptools wheel flit
          pip install -U -e .[testing]

      - name: Run pytest
        run: pytest -vv --cov-report=xml

      - name: Upload coverage
        if: github.repository_owner == 'SINTEF'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          env_vars: OS,PYTHON
          flags: local
        env:
          OS: ubuntu-latest
          PYTHON: ${{ matrix.python_version }}
