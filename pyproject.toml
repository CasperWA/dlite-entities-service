[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "dlite_entities_service"

[project]
name = "dlite-entities-service"
authors = [
    {name = "Casper Welzel Andersen", email = "casper.w.andersen@sintef.no"},
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Private :: Do Not Upload",
]
keywords = ["dlite", "mongodb"]
requires-python = "~=3.10"
dynamic = ["version", "description"]

dependencies = [
    "fastapi ~=0.104.0",
    "pydantic-settings ~=2.0",
    "pymongo ~=4.5",
    "python-dotenv ~=1.0",
    "uvicorn >=0.23.2,<1",
]

[project.optional-dependencies]
dev = [
    "pre-commit ~=3.5",
]

[project.urls]
Home = "https://github.com/CasperWA/dlite-entities-service"
Documentation = "https://CasperWA.github.io/dlite-entities-service"
Source = "https://github.com/CasperWA/dlite-entities-service"
"Issue Tracker" = "https://github.com/CasperWA/dlite-entities-service/issues"
Changelog = "https://CasperWA.github.io/dlite-entities-service/latest/CHANGELOG"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
  "FURB",        # refurb
  "PYI",         # flake8-pyi
]
ignore = [
  "PLR",    # Design related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]
