name: "entities-service"

services:
  entities_service:
    build:
      context: "."
      target: "${ENTITIES_SERVICE_DOCKER_TARGET:-development}"
    ports:
      - "${ENTITIES_SERVICE_PORT:-7000}:7000"
    environment:
      ENTITIES_SERVICE_BASE_URL: "${ENTITIES_SERVICE_HOST:-http://onto-ns.com/meta}"
      ENTITIES_SERVICE_BACKEND: mongodb
      ENTITIES_SERVICE_MONGO_URI: "mongodb://mongodb:27017"
      ENTITIES_SERVICE_X509_CERTIFICATE_FILE: "docker_security/test-client.pem"
      ENTITIES_SERVICE_CA_FILE: "docker_security/test-ca.pem"
    depends_on:
      mongodb:
        condition: service_healthy
        restart: true
    networks:
      - entities_service_net
    volumes:
      - "${PWD}:/app"
    user: "1000:1000"
    stop_grace_period: 1s

  mongodb:
    image: mongo:8
    ports:
      - "27017:27017"
    networks:
      - entities_service_net
    volumes:
      - "./.github/docker_init/create_x509_user.js:/docker-entrypoint-initdb.d/0_create_x509_user.js"
      - "./docker_security:/mongo_tls"
    command: --tlsMode allowTLS --tlsCertificateKeyFile /mongo_tls/test-server1.pem --tlsCAFile /mongo_tls/test-ca.pem
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://root:root@localhost:27017/?authSource=admin --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    stop_grace_period: 1s

  mongodb_gui:
    image: mongo-express:1
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/?authSource=admin
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - entities_service_net
    depends_on:
      mongodb:
        condition: service_healthy
        restart: true

networks:
  entities_service_net:
